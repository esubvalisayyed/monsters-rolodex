{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list-component.jsx","components/search-box/search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","address","street","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","reject","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAEaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,QAClB,4BAAIP,EAAMI,QAAQI,QAAQC,aCLrBC,EAAU,SAACV,GACpB,OACI,sBAAKC,UAAU,YAAf,cACAD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OACrB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,OAFxB,QCAMQ,G,MAAW,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,8BACA,uBAAOd,UAAU,aAAae,KAAK,SAASF,YAAaA,EAAaG,SAAUF,QCJnEG,E,kDACnB,aAAc,IAAD,8BACX,gBACKC,MAAO,CACVR,SAAS,GACTS,YAAY,IAJH,E,qDAOb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAACC,EAASC,GAEZ,OAAOD,EAASE,UAGhBH,MAAK,SAAAI,GAAK,OAAG,EAAKC,SAAS,CAAChB,SAAUe,S,oBAG5C,WAAS,IAAD,SAC2BE,KAAKT,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACXS,EAAkBlB,EAASmB,QAAO,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASZ,EAAYW,kBACvG,OACE,sBAAK9B,UAAU,MAAf,UACA,mDACA,cAAC,EAAD,CAAYa,YAAY,kBAAkBC,aAAc,SAACkB,GAAD,OAAK,EAAKN,SAAS,CAACP,YAAaa,EAAEC,OAAOC,WAClG,cAAC,EAAD,CAAUxB,SAAUkB,W,GAzBYO,aCQnBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dc283cb2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css'\r\nexport const Card = (props) =>{\r\n    return(\r\n        <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n        <h1>{props.monster.name}</h1>\r\n        <p>{props.monster.email}</p>\r\n        <p>{props.monster.address.street}</p>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport './card-list-style.css'\r\nimport { Card } from '../card/card.component'\r\nexport const CardList =(props) => {\r\n    return (\r\n        <div className=\"card-list\"> {\r\n        props.monsters.map(monster =>\r\n             <Card key={monster.id} monster={monster}/>)\r\n      } </div>\r\n      )\r\n}\r\n\r\n","import React from 'react'\r\nimport './search-box-style.css'\r\n\r\n\r\n\r\nexport const  SearchBox =({placeholder, handleChange}) => {\r\n    return (\r\n        <div >\r\n        <input className='search-box' type=\"search\" placeholder={placeholder} onChange={handleChange}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport { CardList } from './components/card-list/card-list-component'\nimport { SearchBox } from './components/search-box/search-box-component'\nexport default class App  extends Component {\n  constructor(){\n    super();\n    this.state ={\n      monsters:[],\n      searchField:''\n    }\n  }\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then((response,reject)=>{\n      if(true){\n        return response.json()\n      }\n       })\n       .then(users=> this.setState({monsters: users}) );\n       \n  }\n  render(){\n    const {monsters, searchField } = this.state;\n    const filteredMonsters =monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\nreturn (\n  <div className=\"App\">\n  <h1>Monsters Rolodex </h1>\n  <SearchBox  placeholder=\"Search Monsters\" handleChange={(e)=>this.setState({searchField: e.target.value})}/>\n  <CardList monsters={filteredMonsters}/>   \n      \n    </div>\n)\n\n  }\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}